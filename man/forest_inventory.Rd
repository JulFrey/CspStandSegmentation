% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2025-01-10_A1_JF_forest_inventory.R
\name{forest_inventory}
\alias{forest_inventory}
\title{Function to perform a forest inventory based on a segmented las object (needs to contain TreeID)}
\usage{
forest_inventory(
  tls,
  slice_min = 0.3,
  slice_max = 4,
  increment = 0.2,
  width = 0.1,
  max_dbh = 1,
  n_cores = max(c(1, parallel::detectCores()/2 - 1))
)
}
\arguments{
\item{slice_min}{the minimum height of a slice for stems to estimate the taper curve}

\item{slice_max}{the maximum height of a slice for stems to estimate the taper curve}

\item{increment}{the increment of the slices}

\item{width}{the width of the slices}

\item{max_dbh}{the maximum DBH allowed}

\item{n_cores}{number of cores to use}

\item{las}{lidR las object with the segmented trees}
}
\value{
a data.frame with the TreeID, X, Y, DBH, quality_flag, Height and ConvexHullArea
}
\description{
This function estimates a taper curve for evry tree and returns the DBH at 1.3m, its position in XY coordinates, the tree height and the trees 2D projection area.
}
\examples{
# read example data
file = system.file("extdata", "beech.las", package="CspStandSegmentation")
tls = lidR::readTLSLAS(file)

# find tree positions as starting points for segmentation
map <- CspStandSegmentation::find_base_coordinates_raster(tls)

# segment trees
segmented <- tls |>
  CspStandSegmentation::add_geometry(n_cores = parallel::detectCores()/2) |>
  CspStandSegmentation::csp_cost_segmentation(map, 1, N_cores = parallel::detectCores()/2)

# show results
\dontrun{lidR::plot(segmented, color = "TreeID")}

# perform inventory
inventory <- CspStandSegmentation::forest_inventory(segmented)
}
